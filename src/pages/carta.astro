---
import BaseLayout from '../layouts/BaseLayout.astro';
import menu from '../data/menu.json';
import { slugify } from '../utils/slugify.js';

const categoryNames = Object.keys(menu);

const pageTitle = "Carta | Kome Kome";
const pageDescription = "El pollo asado es nuestra especialidad. PÃ­delo para llevar o domicilio y que no falte en tu mesa.";
---


<BaseLayout title={pageTitle} description={pageDescription}>
  <header class="sticky-header">
    <nav class="menu-nav">
      <ul class="menu-links">
        {categoryNames.map((cat) => {
          const cleanId = slugify(cat);
          return (
            <li><a href={`#${cleanId}`}>{cat}</a></li>
          );
        })}
      </ul>
    </nav>
  </header>

  <section class="menu">
    {Object.entries(menu).map(([categoryName, categoryData]) => {
      const cleanId = slugify(categoryName);
      return (
        <section id={cleanId} class="category-section">
          <h3>{categoryName}</h3>
          {categoryData.description && <p class="category-description">{categoryData.description}</p>}
          <ul>
            {categoryData.items.map((item) => (
              <li class="menu-item">
                <div class="item-header">
                  <strong>{item.name}</strong>
                  {typeof item.price === "object" ? (
                    <ul class="multi-price">
                      {Object.entries(item.price).map(([portion, price]) => (
                        <li>
                          <span class="portion">{portion}</span>
                          <span class="price">{price}</span>
                        </li>
                      ))}
                    </ul>
                  ) : (
                    <span class="single-price">{item.price}</span>
                  )}
                </div>
                {item.description && <p class="item-description">{item.description}</p>}
              </li>
            ))}
          </ul>
        </section>
      );
    })}
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const links = document.querySelectorAll('.menu-nav a');
      const sections = [...document.querySelectorAll('.category-section')];

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach(entry => {
            const id = entry.target.id;
            const link = document.querySelector(`.menu-nav a[href="#${id}"]`);

            if (entry.isIntersecting) {
              document.querySelectorAll('.menu-nav a').forEach(l => l.classList.remove('active'));
              if (link) link.classList.add('active');
              entry.target.classList.add('active-section');
            } else {
              entry.target.classList.remove('active-section');
            }
          });
        },
        { rootMargin: '-50% 0px -50% 0px', threshold: 0.1 }
      );

      sections.forEach(section => observer.observe(section));
    });
  </script>
</BaseLayout>
